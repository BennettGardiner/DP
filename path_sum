# Solves Problem 81 from projectEuler.net using Dynamic Programming
num_rows = 5
num_cols = 5

data = [
    [131, 673, 234, 103, 18],
    [201, 96, 342, 965, 150],
    [630, 803, 746, 422, 111],
    [537, 699, 497, 121, 956],
    [805, 732, 524, 37, 331]
]


def cost(row, col):
    if row == num_rows - 1 and col == num_cols - 1:
        return data[row][col]
    elif row == num_rows - 1:
        return sum([data[row][c] for c in range(col, num_cols)])
    elif col == num_cols - 1:
        return sum([data[r][col] for r in range(row, num_rows)])
    else:
        return data[row][col] + min(cost(row, col + 1), cost(row + 1, col))


print(cost(0, 0))
